@keyframes MoveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes MoveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes MoveInButton {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

/* this means all selector */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* This will inherit body element's property */
  box-sizing: inherit; }

html {
  /* 10px/user default *user default=16px */
  font-size: 62.5%; }

body {
  /* To not add padding and margin to its heigh and width  */
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  /* 1.7 times bigger than predefined height  */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* 
    This prevents the elements from moving upwards at the end of animation
    Which no one really knows why happns
     */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /* to not treat this as text  so this will divide this text and the following*/
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: MoveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* 
        Another cool stuff
        animation-delay: 1s;
        animation-iteration-count: 3; 
        */ }
  .heading-primary--sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: MoveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.u-center-text {
  text-align: center; }

.btn {
  /* after basically means creating an element after the specified element*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* This works as normal block element */
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    /* for btn::after to be abosule */
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    /* These two properties are necessary */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--animated {
    animation: MoveInButton .5s ease-out .75s;
    /* this will make the element start from 0 (??) */
    animation-fill-mode: backwards; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -19vh; }

.header {
  /* 95% viewport heigh */
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  /* all about where to crop when resized */
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
  /* This way, elemenets inside of container calculate their positon based on this element  */
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* This will shift the element so the top and left calculates starting from the element's center  */
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row::after {
    content: "";
    clear: both;
    display: table; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem)/3); }
  .row .col-2-of-3 {
    width: calc(2 * (100% - 2 * 6rem)/3 + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem)/4); }
  .row .col-2-of-4 {
    width: calc(2 * (100% - 3 * 6rem)/4 + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * (100% - 3 * 6rem)/4 + 2 * 6rem); }
